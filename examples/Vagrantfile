# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  # All Vagrant configuration is done here. The most common configuration
  # options are documented and commented below. For a complete reference,
  # please see the online documentation at vagrantup.com.

  # Every Vagrant virtual environment requires a box to build off of.
  config.vm.box = "ubuntu/trusty64"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  config.vm.network "private_network", ip: "10.10.10.10"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  config.vm.provider "virtualbox" do |vb|
    # Don't boot with headless mode
    vb.gui = false
    vb.cpus = 2
    # Use VBoxManage to customize the VM. For example to change memory:
    vb.customize ["modifyvm", :id, "--memory", "2048"]
  end
  
  # View the documentation for the provider you're using for more
  # information on available options.

  config.ssh.shell = "bash -c 'BASH_ENV=/etc/profile exec bash'"

  $initScript = <<SCRIPT
echo -e '\e[1;34m    _____ __             __  _          _____ __                            _             '
echo -e '\e[1;34m   / ___// /__________ _/ /_(_)___     / ___// /_________  ____ _____ ___  (_)___  ____ _ '
echo -e '\e[1;34m   \\__ \\/ __/ ___/ __ `/ __/ / __ \\    \\__ \\/ __/ ___/ _ \\/ __ `/ __ `__ \\/ / __ \\/ __ `/ '
echo -e '\e[1;34m  ___/ / /_/ /  / /_/ / /_/ / /_/ /   ___/ / /_/ /  /  __/ /_/ / / / / / / / / / / /_/ /  '
echo -e '\e[1;34m /____/\\__/_/   \\__,_/\\__/_/\\____/   /____/\\__/_/   \\___/\\__,_/_/ /_/ /_/_/_/ /_/\\__, /   '
echo -e '\e[1;34m                                                                                /____/    '
echo -e ''

echo -e '\e[1;34mDownloading dependencies...'

wget -qO - http://packages.elasticsearch.org/GPG-KEY-elasticsearch | sudo apt-key add -
apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 7F0CEB10

echo 'deb http://downloads-distro.mongodb.org/repo/ubuntu-upstart dist 10gen' | sudo tee /etc/apt/sources.list.d/mongodb.list
add-apt-repository 'deb http://packages.elasticsearch.org/elasticsearch/1.3/debian stable main'
add-apt-repository 'deb http://prerepository.stratio.com/TEST/0.9.2/ubuntu/13.10/ binary/'
add-apt-repository ppa:webupd8team/java

echo -e '\e[1;34mUpdating repositories...'
apt-get update -q -y

echo oracle-java7-installer shared/accepted-oracle-license-v1-1 select true | sudo /usr/bin/debconf-set-selections

echo -e '\e[1;34mInstalling java 7...'

apt-get install oracle-java7-installer oracle-java7-set-default -q -y
update-java-alternatives -s java-7-oracle

echo -e '\e[1;34mInstalling services...'
apt-get install stratio-kafka stratio-zookeeper stratio-cassandra elasticsearch mongodb-org apache2 -q -y --force-yes


echo -e '\e[1;34mStarting services...'
update-rc.d elasticsearch defaults
update-rc.d mongod defaults
update-rc.d kafka defaults
update-rc.d zookeeper defaults

service kafka start
service zookeeper start
service cassandra start
service elasticsearch start
service mongod start

echo -e '\e[1;34mDownloading kibana...'
wget  'https://download.elasticsearch.org/kibana/kibana/kibana-3.1.0.tar.gz'

echo -e '\e[1;34mUncompressing kibana...'
tar -xzf kibana-3.1.0.tar.gz
chown -R vagrant:vagrant kibana-3.1.0
mv -f kibana-3.1.0 /var/www/html
mv /var/www/html/kibana-3.1.0 /var/www/html/kibana

echo -e '\e[1;34mDownloading stratio streaming...'
wget 'https://s3.amazonaws.com/stratioorg/streaming-engine-0.4.0-app.tar.gz'

echo -e '\e[1;34mUncompressing stratio streaming...'
tar -xzf streaming-engine-0.4.0-app.tar.gz

echo -e '\e[1;34mAdding privileges to vagrant user...'
chown -R vagrant:vagrant streaming-0.4.0
sudo -H -u vagrant bash -c 'mv -f streaming-0.4.0 ~'
sudo -H -u vagrant bash -c 'mv -f streaming-0.4.0 streaming'

echo -e '\e[1;34mCreating stratio streaming log folder...'
mkdir -p /var/log/stratio
chown -R vagrant:vagrant /var/log/stratio

echo -e '\e[1;34mRunning stratio streaming...'
echo 'respawn
    respawn limit 15 5
    start on filesystem and net-device-up IFACE=lo
    exec /home/vagrant/streaming/bin/run >> /var/log/stratio/out' >> /etc/init/stratio-streaming.conf
update-rc.d stratio-streaming defaults
service stratio-streaming start
echo -e '\e[1;34mStratio streaming started.'

echo -e '\e[1;34mDownloading Streaming shell...'
wget 'https://s3.amazonaws.com/stratioorg/streaming-shell-0.4.0-app.tar.gz'
echo -e '\e[1;34mUncompressing Streaming shell...'
tar -xzf streaming-shell-0.4.0-app.tar.gz
chown -R vagrant:vagrant streaming-shell-0.4.0
sudo -H -u vagrant bash -c 'mv -f streaming-shell-0.4.0 ~'
sudo -H -u vagrant bash -c 'mv -f streaming-shell-0.4.0 shell'
echo -e '\e[1;34mCreating shortcut streaming-sell...'
ln -s /home/vagrant/shell/bin/shell /usr/local/bin/streaming-shell
echo -e '\e[1;34mStreaming Shell installed.'

echo -e '\e[1;34mVirtual machine ip is 10.10.10.10'
echo -e '\e[1;34mKibana dashboard accesible from http://10.10.10.10/kibana'
echo -e '\e[1;34mAll ready. Type vagrant ssh to open a terminal.'

SCRIPT

  config.vm.provision "shell" do |s|
    s.inline = $initScript
    s.keep_color = true
  end
end
